
#
# same as upstream, except:
# - added $SUB_IMAGE_NAME variable to comply with build.yml
# - the report/grep stuff, since we are not on ultimate
#   edition and it won't show in MRs
#
.container_scanning:
  stage: test
  interruptible: true
  image:
    name: registry.gitlab.com/gitlab-org/security-products/analyzers/klar
    entrypoint: []
  variables:
    GIT_STRATEGY: fetch
    CS_MAJOR_VERSION: latest
    # By default, use the latest clair vulnerabilities database, however, allow it to be overridden here with a specific image
    # to enable container scanning to run offline, or to provide a consistent list of vulnerabilities for integration testing purposes
    CLAIR_DB_IMAGE_TAG: "latest"
    CLAIR_DB_IMAGE: "arminc/clair-db:$CLAIR_DB_IMAGE_TAG"
    # Override the GIT_STRATEGY variable in your `.gitlab-ci.yml` file and set it to `fetch` if you want to provide a `clair-whitelist.yml`
    # file. See https://docs.gitlab.com/ee/user/application_security/container_scanning/index.html#overriding-the-container-scanning-template
    # for details
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE$SUB_IMAGE_NAME"
    CI_APPLICATION_TAG: "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
    CLAIR_OUTPUT: High
    #CLAIR_VULNERABILITIES_DB_URL:
    DOCKER_USER: "$CI_REGISTRY_USER"
    DOCKER_PASSWORD: "$CI_REGISTRY_PASSWORD"
    CLAIR_DB_CONNECTION_STRING: "postgresql://postgres:password@clair-vulnerabilities-db:5432/postgres?sslmode=disable&statement_timeout=60000"
  allow_failure: true
  services:
    - name: $CLAIR_DB_IMAGE
      alias: clair-vulnerabilities-db
  script:
    # the kubernetes executor currently ignores the Docker image entrypoint value, so the start.sh script must
    # be explicitly executed here in order for this to work with both the kubernetes and docker executors
    # see this issue for more details https://gitlab.com/gitlab-org/gitlab-runner/issues/4125
    - /container-scanner/start.sh | ( grep --color=always "Unapproved" -A 9999 -B 9999 && exit 1 || exit 0 )

  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
  dependencies: []
  only:
    refs:
      - branches


#| sed -n -e '/ Unapproved \| Medium/,/+$/ p'
