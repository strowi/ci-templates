#
## CK-customized from https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Security/Secret-Detection.gitlab-ci.yml
#
# Read more about this feature here: https://docs.gitlab.com/ee/user/application_security/secret_detection
#
# Configure the scanning tool through the environment variables.
# List of the variables: https://docs.gitlab.com/ee/user/application_security/secret_detection/#available-variables
# How to set: https://docs.gitlab.com/ee/ci/yaml/#variables

variables:
  SECURE_ANALYZERS_PREFIX: "registry.gitlab.com/gitlab-org/security-products/analyzers"
  SECRETS_ANALYZER_VERSION: "3"
  SECRET_DETECTION_EXCLUDED_PATHS: ""

.secret-analyzer:
  stage: test
  image: "$SECURE_ANALYZERS_PREFIX/secrets:$SECRETS_ANALYZER_VERSION"
  services: []
  allow_failure: true
  before_script: []
  needs: []
  dependencies: []
  # `rules` must be overridden explicitly by each child job
  # see https://gitlab.com/gitlab-org/gitlab/-/issues/218444
  # artifacts:
  #   reports:
  #     secret_detection: gl-secret-detection-report.json

secret_detection_default_branch:
  extends: .secret-analyzer
  rules:
    - if: $SECRET_DETECTION_DISABLED
      when: never
    - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH
  script:
    - '###'
    - '### Container Scanning with gitleaks'
    - '### Documentation: https://gitlab.com/strowi/ci-templates/ ###'
    - '###'
    - test -f .gitleaks.toml && GITLEAKS_REPO_CONFIG="--append-repo-config --repo-config-path=.gitleaks.toml"
    - gitleaks --threads=8 --redact --verbose $GITLEAKS_REPO_CONFIG -p $CI_PROJECT_DIR

secret_detection:
  extends: .secret-analyzer
  rules:
    - if: $SECRET_DETECTION_DISABLED
      when: never
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  script:
    - '###'
    - '### Container Scanning with gitleaks'
    - '### Documentation: https://gitlab.com/strowi/ci-templates/ ###'
    - '###'
    - if [[ $CI_COMMIT_TAG ]]; then echo "Skipping Secret Detection for tags. No code changes have occurred."; exit 0; fi
    - git fetch origin $CI_DEFAULT_BRANCH $CI_COMMIT_REF_NAME
    - git log --left-right --cherry-pick --pretty=format:"%H" refs/remotes/origin/$CI_DEFAULT_BRANCH...refs/remotes/origin/$CI_COMMIT_REF_NAME > "$CI_COMMIT_SHA"_commit_list.txt
    - export SECRET_DETECTION_COMMITS_FILE="$CI_COMMIT_SHA"_commit_list.txt
    #- /analyzer run
    # - cat gl-secret-detection-report.json
    - test -f .gitleaks.toml && GITLEAKS_REPO_CONFIG="--append-repo-config --repo-config-path=.gitleaks.toml"
    - gitleaks --threads=8 --redact --verbose --commits-file="$CI_COMMIT_SHA"_commit_list.txt $GITLEAKS_REPO_CONFIG -p $CI_PROJECT_DIR
    - rm "$CI_COMMIT_SHA"_commit_list.txt
