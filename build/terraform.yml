variables:
  SNAP_USER_COMMON: ${CI_PROJECT_DIR}
  PLAN_CACHE: plan.cache
  PLAN_JSON: plan.json
  TERRAFORM_TAG: latest

image:
  name: "registry.gitlab.com/strowi/terraform:latest"
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

.fmt:
  stage: format
  script:
    - cd $TF_ROOT
    - tf docs
  rules:
    - if: $CI_SSH_PRIVATE_KEY == null
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

.checkov:
  stage: validate
  image:
    # TODO: mirror image
    name: bridgecrew/checkov:2.0.407
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  allow_failure: true
  cache:
    key: "${TF_ROOT}-${CI_COMMIT_REF_SLUG}"
    paths:
      - ${TF_ROOT}/.terraform
      - .terraform.versions
  artifacts:
    when: always
    reports:
      junit: $TF_ROOT/checkov.xml
  needs: []
  dependencies: []
  before_script: []
  script:
    - cd ${TF_ROOT}
    - '#'
    - '# https:fi//github.com/bridgecrewio/checkov'
    - '#'
    - checkov -s -d .
    - checkov -d . -o junitxml > checkov.xml

.plan:
  stage: plan
  allow_failure: false
  cache:
    key: "${TF_ROOT}-${CI_COMMIT_REF_SLUG}"
    paths:
      - ${TF_ROOT}/.terraform
      - .terraform.versions
  artifacts:
    name: ${TF_ROOT}
    when: always
    paths:
      - $TF_ROOT/$PLAN_CACHE
    reports:
      terraform: $TF_ROOT/$PLAN_JSON
  script:
    - cd $TF_ROOT
    - tf plan
    - tf plan-json

# ref: https://gitlab.com/infracost/infracost-gitlab-ci/
.infracost:
  script:
    - tfi
    - /scripts/ci/diff.sh || true # Do not change
  variables:
    # Path to the Terraform directory or JSON/plan file. Either `path` or `config_file` is required.
    path: "./${PLAN}"
    #
    # Flags to pass to the 'terraform plan' command, e.g. `"-var-file=my.tfvars -var-file=other.tfvars"`. Applicable when path is a Terraform directory.
    # terraform_plan_flags:
    #
    # The Terraform workspace to use. Applicable when path is a Terraform directory. Only set this for multi-workspace deployments, otherwise it might result in the Terraform error "workspaces not supported".
    # terraform_workspace:
    #
    # Path to Infracost usage file (https://www.infracost.io/docs/usage_based_resources) that specifies values for usage-based resources, see https://github.com/infracost/infracost/blob/master/infracost-usage-example.yml for the available options.
    # usage_file: "./infracost-usage.yml"
    #
    # If your repo has multiple Terraform projects or workspaces, define them in a config file (https://www.infracost.io/docs/config_file/) and set this input to its path. Their results will be combined into the same diff output. Cannot be used with path, terraform_plan_flags or usage_file inputs.
    # config_file:
    #
    # Show unsupported resources, some of which might be free, at the bottom of the Infracost output (default is false).
    show_skipped: "true"
    #
    # A JSON string describing the condition that triggers pull request comments, can be one of these:
    #  - `'{"has_diff": true}'`: only post a comment if there is a diff. This is the default behavior.
    #  - `'{"always": true}'`: always post a comment.
    #  - `'{"percentage_threshold": 0}'`: absolute percentage threshold that triggers a comment. For example, set to 1 to post a comment if the cost estimate changes by more than plus or minus 1%.
    post_condition: '{"has_diff": true}'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - when: never

# ref: https://gitlab.com/infracost/infracost-gitlab-ci/
.infracost_breakdown:
  script:
    - tfi
    - /scripts/breakdown_all.sh || true # Do not change
  artifacts:
    name: infracost_${TF_ROOT}
    when: always
    paths:
      - $TF_ROOT/infracost-report.html
  variables:
    # Path to the Terraform directory or JSON/plan file. Either `path` or `config_file` is required.
    path: "./${PLAN}"
    #
    # Flags to pass to the 'terraform plan' command, e.g. `"-var-file=my.tfvars -var-file=other.tfvars"`. Applicable when path is a Terraform directory.
    # terraform_plan_flags:
    #
    # The Terraform workspace to use. Applicable when path is a Terraform directory. Only set this for multi-workspace deployments, otherwise it might result in the Terraform error "workspaces not supported".
    # terraform_workspace:
    #
    # Path to Infracost usage file (https://www.infracost.io/docs/usage_based_resources) that specifies values for usage-based resources, see https://github.com/infracost/infracost/blob/master/infracost-usage-example.yml for the available options.
    # usage_file: "./infracost-usage.yml"
    #
    # If your repo has multiple Terraform projects or workspaces, define them in a config file (https://www.infracost.io/docs/config_file/) and set this input to its path. Their results will be combined into the same diff output. Cannot be used with path, terraform_plan_flags or usage_file inputs.
    # config_file:
    #
    # Show unsupported resources, some of which might be free, at the bottom of the Infracost output (default is false).
    show_skipped: "true"
    #
    # A JSON string describing the condition that triggers pull request comments, can be one of these:
    #  - `'{"has_diff": true}'`: only post a comment if there is a diff. This is the default behavior.
    #  - `'{"always": true}'`: always post a comment.
    #  - `'{"percentage_threshold": 0}'`: absolute percentage threshold that triggers a comment. For example, set to 1 to post a comment if the cost estimate changes by more than plus or minus 1%.
    # post_condition: '{"has_diff": true}'
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
    - when: never

.deploy:
  stage: apply
  cache:
    key: "${TF_ROOT}-${CI_COMMIT_REF_SLUG}"
    paths:
      - ${TF_ROOT}/.terraform
      - .terraform.versions
  dependencies:
    - plan
  script:
    - cd ${TF_ROOT}
    - tf apply
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      when: manual
    - when: never
