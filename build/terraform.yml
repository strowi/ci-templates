variables:
  SNAP_USER_COMMON: ${CI_PROJECT_DIR}
  PLAN_CACHE: plan.cache
  PLAN_JSON: plan.json
  TERRAFORM_TAG: latest

image:
  name: "registry.gitlab.com/strowi/terraform:latest"
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

.fmt:
  stage: format
  script:
    - cd $TF_ROOT
    - tf docs
  rules:
    - if: $CI_SSH_PRIVATE_KEY == null
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

.checkov:
  stage: validate
  image:
    # TODO: mirror image
    name: bridgecrew/checkov:2.0.505
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  allow_failure: true
  cache:
    key: "${TF_ROOT}-${CI_COMMIT_REF_SLUG}"
    paths:
      - ${TF_ROOT}/.terraform
      - .terraform.versions
  artifacts:
    when: always
    reports:
      junit: $TF_ROOT/checkov.xml
  needs: []
  dependencies: []
  before_script: []
  script:
    - cd ${TF_ROOT}
    - '#'
    - '# https:fi//github.com/bridgecrewio/checkov'
    - '#'
    - checkov -s -d .
    - checkov -d . -o junitxml > checkov.xml

.plan:
  stage: plan
  allow_failure: false
  cache:
    key: "${TF_ROOT}-${CI_COMMIT_REF_SLUG}"
    paths:
      - ${TF_ROOT}/.terraform
      - .terraform.versions
  artifacts:
    name: ${TF_ROOT}
    when: always
    paths:
      - $TF_ROOT/$PLAN_CACHE
    reports:
      terraform: $TF_ROOT/$PLAN_JSON
  script:
    - cd $TF_ROOT
    - tf plan
    - tf plan-json

# ref: https://gitlab.com/infracost/infracost-gitlab-ci/
.infracost:
  stage: cost
  script:
    - cd ${TF_ROOT}
    - tf cost
  dependencies:
    - plan    
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - when: never

.deploy:
  stage: apply
  cache:
    key: "${TF_ROOT}-${CI_COMMIT_REF_SLUG}"
    paths:
      - ${TF_ROOT}/.terraform
      - .terraform.versions
  dependencies:
    - plan
  script:
    - cd ${TF_ROOT}
    - tf apply
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      when: manual
    - when: never
